# coding: utf-8

"""
    Consolidate Services

    Description of all APIs  # noqa: E501

    OpenAPI spec version: version not set
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ApplicationLogEntry(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'content': 'str',
        'last': 'bool',
        'pod_name': 'str',
        'time_stamp': 'V1Time',
        'time_stamp_str': 'str'
    }

    attribute_map = {
        'content': 'content',
        'last': 'last',
        'pod_name': 'podName',
        'time_stamp': 'timeStamp',
        'time_stamp_str': 'timeStampStr'
    }

    def __init__(self, content=None, last=None, pod_name=None, time_stamp=None, time_stamp_str=None):  # noqa: E501
        """ApplicationLogEntry - a model defined in Swagger"""  # noqa: E501
        self._content = None
        self._last = None
        self._pod_name = None
        self._time_stamp = None
        self._time_stamp_str = None
        self.discriminator = None
        if content is not None:
            self.content = content
        if last is not None:
            self.last = last
        if pod_name is not None:
            self.pod_name = pod_name
        if time_stamp is not None:
            self.time_stamp = time_stamp
        if time_stamp_str is not None:
            self.time_stamp_str = time_stamp_str

    @property
    def content(self):
        """Gets the content of this ApplicationLogEntry.  # noqa: E501


        :return: The content of this ApplicationLogEntry.  # noqa: E501
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this ApplicationLogEntry.


        :param content: The content of this ApplicationLogEntry.  # noqa: E501
        :type: str
        """

        self._content = content

    @property
    def last(self):
        """Gets the last of this ApplicationLogEntry.  # noqa: E501


        :return: The last of this ApplicationLogEntry.  # noqa: E501
        :rtype: bool
        """
        return self._last

    @last.setter
    def last(self, last):
        """Sets the last of this ApplicationLogEntry.


        :param last: The last of this ApplicationLogEntry.  # noqa: E501
        :type: bool
        """

        self._last = last

    @property
    def pod_name(self):
        """Gets the pod_name of this ApplicationLogEntry.  # noqa: E501


        :return: The pod_name of this ApplicationLogEntry.  # noqa: E501
        :rtype: str
        """
        return self._pod_name

    @pod_name.setter
    def pod_name(self, pod_name):
        """Sets the pod_name of this ApplicationLogEntry.


        :param pod_name: The pod_name of this ApplicationLogEntry.  # noqa: E501
        :type: str
        """

        self._pod_name = pod_name

    @property
    def time_stamp(self):
        """Gets the time_stamp of this ApplicationLogEntry.  # noqa: E501


        :return: The time_stamp of this ApplicationLogEntry.  # noqa: E501
        :rtype: V1Time
        """
        return self._time_stamp

    @time_stamp.setter
    def time_stamp(self, time_stamp):
        """Sets the time_stamp of this ApplicationLogEntry.


        :param time_stamp: The time_stamp of this ApplicationLogEntry.  # noqa: E501
        :type: V1Time
        """

        self._time_stamp = time_stamp

    @property
    def time_stamp_str(self):
        """Gets the time_stamp_str of this ApplicationLogEntry.  # noqa: E501


        :return: The time_stamp_str of this ApplicationLogEntry.  # noqa: E501
        :rtype: str
        """
        return self._time_stamp_str

    @time_stamp_str.setter
    def time_stamp_str(self, time_stamp_str):
        """Sets the time_stamp_str of this ApplicationLogEntry.


        :param time_stamp_str: The time_stamp_str of this ApplicationLogEntry.  # noqa: E501
        :type: str
        """

        self._time_stamp_str = time_stamp_str

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ApplicationLogEntry, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ApplicationLogEntry):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
